##Here's the test image

FROM public.ecr.aws/lts/ubuntu:20.04_stable

ENV PATH="${PATH}:/usr/lib/R/bin/"

# install R
RUN apt-get update
RUN apt-get -y upgrade
RUN apt install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
RUN add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
RUN apt-get update
RUN apt install -y r-base

#install packages we'll need
RUN apt-get install -y openssl libssl-dev libcurl4-openssl-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev git
RUN add-apt-repository ppa:ubuntugis/ppa
RUN apt-get update
RUN apt-get install -y gdal-bin
RUN apt install -y libgdal-dev

RUN Rscript -e "install.packages(c('rgdal'), repos = 'https://cloud.r-project.org/')"
RUN Rscript -e "install.packages(c('raster'), repos = 'https://cloud.r-project.org/')"
RUN Rscript -e "install.packages(c('devtools'), repos = 'https://cloud.r-project.org/')"
RUN Rscript -e "install.packages(c('sp','yaml','jsonlite','aws.s3','aws.ec2metadata','remotes','data.table'), repos = 'https://cloud.r-project.org/')"

RUN Rscript -e "devtools::install_github('bergant/airtabler')"

#create a directory and clone git repo into it
RUN mkdir -p /code && cd /code
# This does not work, no git repo cloned...
#RUN printf '#!/bin/sh\ncd /code\ngit clone https://github.com/pointblue/OffShoreWind_public.git'
## This does not work either
#WORKDIR /code/
#RUN git clone https://github.com/pointblue/OffShoreWind_public.git /code/
# So, I create clone prior to compiling container and then...
COPY code/OffShoreWind_public/scripts/batchProcessRasters.R /code/.
COPY code/OffShoreWind_public/test/testLambda.json /code/.

WORKDIR /code/


#### Build it
sudo docker build -t testbatch .

#### Run to debug - check that the  repo was cloned
sudo docker run -it testbatch bash
R
Sys.setenv("AWS_ACCESS_KEY_ID" = "my AWS pjmf key", "AWS_SECRET_ACCESS_KEY" = "my AWS pjmf secret key", "AWS_DEFAULT_REGION" = "us-east-1")
inptest<-jsonlite::toJSON(jsonlite::read_json("testLambda.json"))
source("batchProcessRasters.R")
ww<-main(inpJSON=inptest)
